{"version":3,"sources":["../node_modules/codemirror/mode/htmlembedded/htmlembedded.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineMode","config","parserConfig","closeComment","multiplexingMode","getMode","open","openComment","close","delimStyle","mode","token","stream","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","defineMIME","name","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","returnEnd","found","m","index","innerActive","inner","curInner","oldContent","pos","parseDelimiters","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars"],"mappings":"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","file":"static/js/465.d860ef98.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/multiplex\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function (config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\";\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {\n        token: function token(stream) {\n          stream.skipTo(closeComment) || stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n  CodeMirror.defineMIME(\"application/x-ejs\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"javascript\"\n  });\n  CodeMirror.defineMIME(\"application/x-aspx\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-csharp\"\n  });\n  CodeMirror.defineMIME(\"application/x-jsp\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-java\"\n  });\n  CodeMirror.defineMIME(\"application/x-erb\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"ruby\"\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n        };\n      },\n      token: function token(stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function indent(state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function blankLine(state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function innerMode(state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});"],"sourceRoot":""}