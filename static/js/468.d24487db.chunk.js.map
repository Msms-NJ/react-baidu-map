{"version":3,"sources":["../node_modules/codemirror/mode/rst/rst.js","../node_modules/codemirror/mode/python/python.js","../node_modules/codemirror/mode/stex/stex.js","../node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","TAIL","rx_TAIL","NAME","rx_NAME","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME","mod","wordRegexp","words","join","str","wordOperators","commonKeywords","commonBuiltins","top","scopes","length","registerHelper","concat","conf","parserConf","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","lastToken","indent","indentation","type","scopeOffset","offset","lineOffset","pushPyScope","dedent","errorToken","style","tokenBaseInner","inFormat","floatLiteral","eat","intLiteral","toLowerCase","indexOf","tokenize","delimiter","tokenOuter","charAt","substr","singleline","tokenNestedExpr","depth","inner","tokenString","eatWhile","singleLineStringErrors","isString","formatStringFactory","tokenStringFactory","pop","push","align","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","column","pushBracketScope","basecolumn","addErr","textAfter","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","name","split","_config","parserConfig","pushCommand","command","cmdState","peekCommand","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","argument","styleIdentifier","openBracket","closeBracket","plugins","setState","f","normal","source","plug","cmdName","hasOwnProperty","beginParams","inMathMode","ch","getMostPowerful","endModeSeq","popCommand","s","blankLine","base","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","line","electricChars","baseToken","overlayToken"],"mappings":"mIAOG,SAAUA,GACX,aAEAA,EAAWC,WAAW,OAAO,SAAUC,EAAQC,GAC7C,IAAIC,EAAY,qCACZC,EAAc,iCACdC,EAAa,6BACbC,EAAY,0BACZC,EAAc,8BACdC,EAAc,8BAIdC,EAAS,IAAIC,OAAO,2GACpBC,EAAU,CACZC,MAAO,SAAeC,GACpB,GAAIA,EAAOC,MAAMX,IAAcU,EAAOC,MAAM,SAAS,GAAQ,MAAO,SACpE,GAAID,EAAOC,MAAMV,IAAgBS,EAAOC,MAAM,SAAS,GAAQ,MAAO,KACtE,GAAID,EAAOC,MAAMT,IAAeQ,EAAOC,MAAM,SAAS,GAAQ,MAAO,WACrE,GAAID,EAAOC,MAAMR,GAAY,MAAO,SACpC,GAAIO,EAAOC,MAAMP,GAAc,MAAO,WACtC,GAAIM,EAAOC,MAAMN,GAAc,MAAO,WACtC,GAAIK,EAAOC,MAAML,GAAS,MAAO,OAEjC,KAAwB,MAAjBI,EAAOE,SACRF,EAAOC,MAAMX,GAAW,KACxBU,EAAOC,MAAMV,GAAa,KAC1BS,EAAOC,MAAMT,GAAY,KACzBQ,EAAOC,MAAMR,GAAW,KACxBO,EAAOC,MAAMP,GAAa,KAC1BM,EAAOC,MAAMN,GAAa,KAC1BK,EAAOC,MAAML,GAAQ,KAG3B,OAAO,OAGPO,EAAOjB,EAAWkB,QAAQhB,EAAQC,EAAQgB,UAAY,YAC1D,OAAOnB,EAAWoB,YAAYH,EAAML,GAAS,KAC5C,SAAU,QAGbZ,EAAWC,WAAW,YAAY,SAAUC,GAG1C,SAASmB,EAAOC,GACd,IAAIC,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GACjD,OAAON,EAAOO,QAAQ,YAAY,SAAUd,EAAOe,GACjD,MAAyB,oBAAXP,EAAKO,GAAoBP,EAAKO,GAAKf,KAMrD,IAAIgB,EAAc/B,EAAWkB,QAAQhB,EAAQ,UACzC8B,EAAYhC,EAAWkB,QAAQhB,EAAQ,QAIvC+B,EAAO,iBACPC,EAAU,IAAIvB,OAAOU,EAAO,OAAQY,IACpCE,EAAO,mEACPC,EAAU,IAAIzB,OAAOU,EAAO,OAAQc,IAEpCE,EAAWhB,EAAO,gBAAiBc,EADxB,uEAEXG,EAAQ,qCACRC,EAAQ,cACRC,EAAW,IAAI7B,OAAOU,EAAO,OAAQkB,IACrCE,EAAa,IAAI9B,OAAO,6DACxB+B,EAAc,IAAI/B,OAAOU,EAAO,aAXzB,SAYPsB,EAAU,IAAIhC,OAAOU,EAAO,oBAAqBgB,EAAUJ,IAC3DW,EAAe,IAAIjC,OAAOU,EAAO,YAAagB,EAAUJ,IACxDY,EAAkB,IAAIlC,OAAOU,EAAO,wBAAyBiB,EAdtD,OAcmED,EAAUJ,IACpFa,EAAc,IAAInC,OAAOU,EAAO,6BAA8BgB,EAAUJ,IACxEc,EAAc,IAAIpC,OAAOU,EAAO,gBAAiBgB,EAAUJ,IAC3De,EAAsB,IAAIrC,OAAOU,EAAO,aAAciB,IACtDW,EAAkB,IAAItC,OAAOU,EAAO,2BAA4BgB,IAChEa,EAAkB,IAAIvC,OAAOU,EAAO,cAAegB,IACnDc,EAAe,IAAIxC,OAAOU,EAAO,UAAWgB,IAC5Ce,EAAe,IAAIzC,OAAOU,EAAO,UAAWkB,IAC5Cc,EAAc,IAAI1C,OAAOU,EAAO,iBAAkBc,EAAMI,EAAON,IAC/DqB,EAAc,IAAI3C,OAAOU,EAAO,iBAAkBc,EAAMI,EAAON,IAC/DsB,EAAU,IAAI5C,OAAOU,EAAO,YAAac,EAAMF,IAC/CuB,EAAoB,IAAI7C,OAAOU,EAAO,OAAQgB,IAC9CoB,EAAoB,IAAI9C,OAAOU,EAAO,SAAUY,IAChDyB,EAAuB,IAAI/C,OAAOU,EAAO,aAAciB,IACvDqB,EAAuB,IAAIhD,OAAOU,EAAO,OA5BlC,SA6BPuC,EAAuB,IAAIjD,OAAOU,EAAO,OAAQgB,IACjDwB,EAAuB,IAAIlD,OAAOU,EAAO,SAAUY,IACnD6B,EAAe,IAAInD,OAAO,MAC1BoD,EAAe,IAAIpD,OAAOU,EAAO,SAAUgB,IAC3C2B,EAAe,IAAIrD,OAAOU,EAAO,QAASY,IAC1CgC,EAAc,IAAItD,OAAO,YACzBuD,EAAc,IAAIvD,OAAO,kCAG7B,SAASwD,EAAUrD,EAAQsD,GACzB,IAAIvD,EAAQ,KAEZ,GAAIC,EAAOuD,OAASvD,EAAOC,MAAMmD,GAAa,GAC5CI,EAAOF,EAAOG,EAAS,CACrBtD,KAAMc,EACNyC,MAAOxE,EAAWyE,WAAW1C,UAE1B,GAAIjB,EAAOuD,OAASvD,EAAOC,MAAM2B,GACtC4B,EAAOF,EAAOM,GACd7D,EAAQ,YACH,GAAIC,EAAOuD,OAASvD,EAAOC,MAAM0B,GACtC6B,EAAOF,EAAOD,GACdtD,EAAQ,cACH,GAAI8D,EAAMP,IAAUf,GAAevC,EAAOC,MAAMsC,GAAa,GAClE,OAAQuB,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAMqB,GACbvB,EAAQ,UAEJC,EAAOgE,UAAU/D,MAAM,qBACzBqD,EAAMW,UAAW,GAGnB,MAEF,KAAK,EACHT,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAM,OACbF,EAAQ,OACR,MAEF,KAAK,EASH,GARIuD,EAAMW,WACRX,EAAMW,cAAWC,EACjBZ,EAAMa,IAAM,CACVhE,KAAMe,EACNwC,MAAOxE,EAAWyE,WAAWzC,KAI7BoC,EAAMa,IAAK,CACb,GAAqB,KAAjBnE,EAAOoE,OAAe,CACxBZ,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9Ce,EAAMa,SAAMD,EACZ,MAGFnE,EAAQuD,EAAMa,IAAIhE,KAAKJ,MAAMC,EAAQsD,EAAMa,IAAIT,OAC/C,MAGFF,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAMyB,GACb3B,EAAQ,SACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQxB,EAAa,IAC9CvC,EAAOC,MAAMmB,GACb,MAEF,QACEoC,EAAOF,EAAOD,QAEb,GAAIQ,EAAMP,IAAUd,GAAexC,EAAOC,MAAMuC,GAAa,GAClE,OAAQsB,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAMyB,GACb3B,EAAQ,SACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAM,OACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAMqB,GACbvB,EAAQ,UACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQvB,EAAa,IAC9CxC,EAAOC,MAAMmB,GACb,MAEF,QACEoC,EAAOF,EAAOD,QAEb,GAAIQ,EAAMP,IAAUb,GAAWzC,EAAOC,MAAMwC,GAAS,GAC1D,OAAQqB,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOD,EAAWU,EAAQtB,EAAS,IAC1CzC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQtB,EAAS,IAC1CzC,EAAOC,MAAMqB,GACbvB,EAAQ,UACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQtB,EAAS,IAC1CzC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQtB,EAAS,IAC1CzC,EAAOC,MAAMmB,GACb,MAEF,QACEoC,EAAOF,EAAOD,QAEb,GAAIQ,EAAMP,IAAUpB,GAAuBlC,EAAOC,MAAMiC,GAAqB,GAClF,OAAQ4B,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOD,EAAWU,EAAQ7B,EAAqB,IACtDlC,EAAOC,MAAM2C,GACb7C,EAAQ,aACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQ7B,EAAqB,IAClDlC,EAAOC,MAAM,WAAUF,EAAQ,QACnC,MAEF,QACEyD,EAAOF,EAAOD,QAEb,GAAIrD,EAAOC,MAAMkC,GACtBqB,EAAOF,EAAOD,GACdtD,EAAQ,aACH,GAAIC,EAAOC,MAAMmC,GACtBoB,EAAOF,EAAOD,GACdtD,EAAQ,aACH,GAAIC,EAAOC,MAAMoC,GACtBmB,EAAOF,EAAOD,GAETrD,EAAOoE,SAAUpE,EAAOoE,OAAOnE,MAAM,UACxCF,EAAQ,aAEL,GAAI8D,EAAMP,IAAUhB,GAAgBtC,EAAOC,MAAMqC,GAAc,GACpE,OAAQwB,EAAMR,IACZ,KAAK,GACEtD,EAAOoE,QAAUpE,EAAOoE,OAAOnE,MAAM,QACxCuD,EAAOF,EAAOD,EAAWU,EAAQzB,EAAc,IAE/CtC,EAAOC,MAAMqC,GAGf,MAEF,KAAK,EACHkB,EAAOF,EAAOD,EAAWU,EAAQzB,EAAc,IAC/CtC,EAAOC,MAAM,MACbF,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOD,EAAWU,EAAQzB,EAAc,IAC/CtC,EAAOC,MAAMyB,GACb,MAEF,KAAK,EACH8B,EAAOF,EAAOD,EAAWU,EAAQzB,EAAc,IAC/CtC,EAAOC,MAAM,OACbF,EAAQ,OACR,MAEF,QACEyD,EAAOF,EAAOD,QAETrD,EAAOC,MAAMkD,GACtBK,EAAOF,EAAOe,GAEVrE,EAAOE,QAAQsD,EAAOF,EAAOD,GAGnC,OAAOtD,EAKT,SAAS6D,EAAY5D,EAAQsD,GAC3B,IAAIvD,EAAQ,KAEZ,GAAI8D,EAAMP,IAAUvB,GAAmB/B,EAAOC,MAAM8B,GAAiB,GACnE,OAAQ+B,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOM,EAAaG,EAAQhC,EAAiB,IACpD/B,EAAOC,MAAM2C,GACb7C,EAAQ,aACR,MAEF,KAAK,EACHyD,EAAOF,EAAOM,EAAaG,EAAQhC,EAAiB,IACpD/B,EAAOC,MAAM4C,GACb,MAEF,KAAK,EACHW,EAAOF,EAAOM,EAAaG,EAAQhC,EAAiB,IACpD/B,EAAOC,MAAM6C,GACb/C,EAAQ,UACR,MAEF,KAAK,EACHyD,EAAOF,EAAOM,EAAaG,EAAQhC,EAAiB,IACpD/B,EAAOC,MAAM8C,GACbhD,EAAQ,OACR,MAEF,QACEyD,EAAOF,EAAOD,QAEb,GAAIQ,EAAMP,IAAUxB,GAAgB9B,EAAOC,MAAM6B,GAAc,GACpE,OAAQgC,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOM,EAAaG,EAAQjC,EAAc,IACjD9B,EAAOC,MAAMyC,GACb3C,EAAQ,UACJC,EAAOgE,UAAU/D,MAAM,mBAAoBqD,EAAMW,UAAW,EAAcjE,EAAOgE,UAAU/D,MAAM,aAAYqD,EAAMgB,QAAS,GAChI,MAEF,KAAK,EACHd,EAAOF,EAAOM,EAAaG,EAAQjC,EAAc,IACjD9B,EAAOC,MAAM0C,GACb5C,EAAQ,QAEJC,EAAOC,MAAM,eAAiBqD,EAAMW,YACtCX,EAAMW,cAAWC,EACjBV,EAAOF,EAAOG,EAAS,CACrBtD,KAAMe,EACNwC,MAAOxE,EAAWyE,WAAWzC,MAIjC,MAEF,KAAK,EACHsC,EAAOF,EAAOM,EAAaG,EAAQjC,EAAc,KAE7C9B,EAAOC,MAAM,gBAAkBqD,EAAMgB,UACvChB,EAAMgB,YAASJ,EACfV,EAAOF,EAAOG,EAAS,CACrBtD,KAAMc,EACNyC,MAAOxE,EAAWyE,WAAW1C,MAIjC,MAEF,QACEuC,EAAOF,EAAOD,QAEb,GAAIQ,EAAMP,IAAUzB,GAAW7B,EAAOC,MAAM4B,GAAS,GAC1D,OAAQiC,EAAMR,IACZ,KAAK,EACHE,EAAOF,EAAOM,EAAaG,EAAQlC,EAAS,IAC5C7B,EAAOC,MAAM+C,GACbhD,EAAOC,MAAMgD,GACblD,EAAQ,OACR,MAEF,KAAK,EACHyD,EAAOF,EAAOM,EAAaG,EAAQlC,EAAS,IAC5C7B,EAAOC,MAAMiD,GACbnD,EAAQ,OACR,MAEF,QACEyD,EAAOF,EAAOD,QAETrD,EAAOC,MAAM+B,IAGbhC,EAAOC,MAAMgC,IAFtBuB,EAAOF,EAAOD,GACdtD,EAAQ,UAKRC,EAAOuE,WAEHvE,EAAOwE,MACThB,EAAOF,EAAOD,IAEdrD,EAAOyE,YACPjB,EAAOF,EAAOoB,GACd3E,EAAQ,YAIZ,OAAOA,EAKT,SAAS2E,EAAW1E,EAAQsD,GAC1B,OAAOqB,EAAS3E,EAAQsD,EAAO,WAGjC,SAASe,EAAYrE,EAAQsD,GAC3B,OAAOqB,EAAS3E,EAAQsD,EAAO,QAGjC,SAASqB,EAAS3E,EAAQsD,EAAOvD,GAC/B,OAAIC,EAAOwE,OAASxE,EAAOuE,YACzBvE,EAAOyE,YACA1E,IAEPyD,EAAOF,EAAOD,GACP,MAMX,SAASI,EAAQzD,EAAQsD,GACvB,OAAIA,EAAMsB,IAAIzE,MAAQmD,EAAMsB,IAAIlB,MAC1B1D,EAAOuD,OACJvD,EAAOuE,YAAYf,EAAOF,EAAOD,GAC/B,MAGFC,EAAMsB,IAAIzE,KAAKJ,MAAMC,EAAQsD,EAAMsB,IAAIlB,QAGhDF,EAAOF,EAAOD,GACP,MAKT,SAASU,EAAQF,EAAOC,EAAO3D,EAAMuD,GACnC,MAAO,CACLG,MAAOA,EACPC,MAAOA,EACP3D,KAAMA,EACNuD,MAAOA,GAIX,SAASF,EAAOF,EAAOuB,EAAKD,GAC1BtB,EAAMuB,IAAMA,EACZvB,EAAMsB,IAAMA,GAAO,GAGrB,SAASd,EAAMR,GACb,OAAOA,EAAMsB,IAAId,OAAS,EAG5B,SAASD,EAAMP,GACb,OAAOA,EAAMsB,IAAIf,MAKnB,MAAO,CACLF,WAAY,WACV,MAAO,CACLkB,IAAKxB,EACLuB,IAAKb,OAAQG,EAAW,KAG5BY,UAAW,SAAmBxB,GAC5B,IAAIsB,EAAMtB,EAAMsB,IACZT,EAAMb,EAAMa,IAShB,OARIS,EAAIlB,QAAOkB,EAAM,CACnBzE,KAAMyE,EAAIzE,KACVuD,MAAOxE,EAAW4F,UAAUF,EAAIzE,KAAMyE,EAAIlB,SAExCS,IAAKA,EAAM,CACbhE,KAAMgE,EAAIhE,KACVuD,MAAOxE,EAAW4F,UAAUX,EAAIhE,KAAMgE,EAAIT,SAErC,CACLmB,IAAKvB,EAAMuB,IACXD,IAAKA,EACLT,IAAKA,IAGTY,UAAW,SAAmBzB,GAC5B,OAAOA,EAAMa,IAAM,CACjBb,MAAOA,EAAMa,IAAIT,MACjBvD,KAAMmD,EAAMa,IAAIhE,MACdmD,EAAMsB,IAAIzE,KAAO,CACnBmD,MAAOA,EAAMsB,IAAIlB,MACjBvD,KAAMmD,EAAMsB,IAAIzE,MACd,MAENJ,MAAO,SAAeC,EAAQsD,GAC5B,OAAOA,EAAMuB,IAAI7E,EAAQsD,OAG5B,SAAU,QAGbpE,EAAW8F,WAAW,aAAc,OA/gBlCC,CAAI,EAAQ,IAAyB,EAAQ,KAAqB,EAAQ,KAAiB,EAAQ,M,qBCGpG,SAAU/F,GACX,aAEA,SAASgG,EAAWC,GAClB,OAAO,IAAItF,OAAO,MAAQsF,EAAMC,KAAK,OAAS,SAGhD,IA4V2BC,EA5VvBC,EAAgBJ,EAAW,CAAC,MAAO,KAAM,MAAO,OAChDK,EAAiB,CAAC,KAAM,SAAU,QAAS,QAAS,WAAY,MAAO,MAAO,OAAQ,OAAQ,SAAU,UAAW,MAAO,OAAQ,SAAU,KAAM,SAAU,SAAU,OAAQ,QAAS,SAAU,MAAO,QAAS,OAAQ,QAAS,MAClOC,EAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,YAAa,WAAY,MAAO,cAAe,UAAW,UAAW,UAAW,OAAQ,MAAO,SAAU,YAAa,OAAQ,SAAU,QAAS,SAAU,YAAa,UAAW,UAAW,UAAW,OAAQ,OAAQ,MAAO,KAAM,QAAS,MAAO,aAAc,aAAc,OAAQ,MAAO,OAAQ,SAAU,MAAO,MAAO,aAAc,MAAO,OAAQ,SAAU,MAAO,OAAQ,MAAO,MAAO,WAAY,QAAS,OAAQ,WAAY,QAAS,MAAO,UAAW,QAAS,SAAU,eAAgB,MAAO,MAAO,QAAS,QAAS,OAAQ,OAAQ,MAAO,aAAc,iBAAkB,WAAY,aAGzoB,SAASC,EAAInC,GACX,OAAOA,EAAMoC,OAAOpC,EAAMoC,OAAOC,OAAS,GAH5CzG,EAAW0G,eAAe,YAAa,SAAUL,EAAeM,OAAOL,IAMvEtG,EAAWC,WAAW,UAAU,SAAU2G,EAAMC,GAM9C,IALA,IACIC,EAAaD,EAAWC,YAAcD,EAAWE,kBAAoB,4BAErEC,EAAY,CAACH,EAAWI,gBAAiBJ,EAAWK,gBAAiBL,EAAWM,iBAAkBN,EAAWO,iBAAkBP,EAAWG,WAAa,0DAElJK,EAAI,EAAGA,EAAIL,EAAUP,OAAQY,IAC/BL,EAAUK,IAAIL,EAAUM,OAAOD,IAAK,GAG3C,IAAIE,EAAgBV,EAAWU,eAAiBX,EAAKY,WACjDC,EAAapB,EACbqB,EAAapB,OACgBtB,GAA7B6B,EAAWc,iBAA6BF,EAAaA,EAAWd,OAAOE,EAAWc,sBACrD3C,GAA7B6B,EAAWe,iBAA6BF,EAAaA,EAAWf,OAAOE,EAAWe,iBACtF,IAAIC,IAAQhB,EAAWiB,SAAWC,OAAOlB,EAAWiB,SAAW,GAE/D,GAAID,EAAK,CAEP,IAAIG,EAAcnB,EAAWmB,aAAe,oDAC5CP,EAAaA,EAAWd,OAAO,CAAC,WAAY,QAAS,OAAQ,OAAQ,QAAS,UAC9Ee,EAAaA,EAAWf,OAAO,CAAC,QAAS,QAAS,OAAQ,UAC1D,IAAIsB,EAAiB,IAAItH,OAAO,2CAA4C,UAExEqH,EAAcnB,EAAWmB,aAAe,0BAC5CP,EAAaA,EAAWd,OAAO,CAAC,OAAQ,UACxCe,EAAaA,EAAWf,OAAO,CAAC,QAAS,aAAc,SAAU,MAAO,SAAU,WAAY,OAAQ,SAAU,OAAQ,YAAa,SAAU,SAAU,SAAU,UAAW,SAAU,QAAS,OAAQ,SACrMsB,EAAiB,IAAItH,OAAO,2CAA4C,KAG9E,IAAIuH,EAAWlC,EAAWyB,GACtBU,EAAWnC,EAAW0B,GAE1B,SAASU,EAAUtH,EAAQsD,GACzB,IAAIC,EAAMvD,EAAOuD,OAA4B,MAAnBD,EAAMiE,UAGhC,GAFIhE,IAAKD,EAAMkE,OAASxH,EAAOyH,eAE3BlE,GAA0B,MAAnBkC,EAAInC,GAAOoE,KAAc,CAClC,IAAIC,EAAclC,EAAInC,GAAOsE,OAE7B,GAAI5H,EAAOuE,WAAY,CACrB,IAAIsD,EAAa7H,EAAOyH,cAExB,OADII,EAAaF,EAAaG,EAAYxE,GAAgBuE,EAAaF,GAAeI,EAAO/H,EAAQsD,IAA2B,KAAjBtD,EAAOoE,SAAed,EAAM0E,YAAa,GACjJ,KAEP,IAAIC,EAAQC,EAAelI,EAAQsD,GAEnC,OADIqE,EAAc,GAAKI,EAAO/H,EAAQsD,KAAQ2E,GAAS,UAChDA,EAIX,OAAOC,EAAelI,EAAQsD,GAGhC,SAAS4E,EAAelI,EAAQsD,EAAO6E,GACrC,GAAInI,EAAOuE,WAAY,OAAO,KAE9B,IAAK4D,GAAYnI,EAAOC,MAAM,QAAS,MAAO,UAE9C,GAAID,EAAOC,MAAM,YAAY,GAAQ,CACnC,IAAImI,GAAe,EAcnB,GAZIpI,EAAOC,MAAM,iCACfmI,GAAe,GAGbpI,EAAOC,MAAM,kBACfmI,GAAe,GAGbpI,EAAOC,MAAM,YACfmI,GAAe,GAGbA,EAGF,OADApI,EAAOqI,IAAI,MACJ,SAIT,IAAIC,GAAa,EAkBjB,GAhBItI,EAAOC,MAAM,oBAAmBqI,GAAa,GAE7CtI,EAAOC,MAAM,gBAAeqI,GAAa,GAEzCtI,EAAOC,MAAM,iBAAgBqI,GAAa,GAE1CtI,EAAOC,MAAM,mCAEfD,EAAOqI,IAAI,MAEXC,GAAa,GAIXtI,EAAOC,MAAM,kBAAiBqI,GAAa,GAE3CA,EAGF,OADAtI,EAAOqI,IAAI,MACJ,SAKX,GAAIrI,EAAOC,MAAMkH,GAGf,OAFmE,IAAjDnH,EAAOgE,UAAUuE,cAAcC,QAAQ,MAMvDlF,EAAMmF,SAyBZ,SAA6BC,EAAWC,GACtC,KAAO,OAAOH,QAAQE,EAAUE,OAAO,GAAGL,gBAAkB,GAC1DG,EAAYA,EAAUG,OAAO,GAG/B,IAAIC,EAAiC,GAApBJ,EAAU/C,OAG3B,SAASoD,EAAgBC,GACvB,OAAO,SAAUhJ,EAAQsD,GACvB,IAAI2F,EAAQf,EAAelI,EAAQsD,GAAO,GAU1C,MARa,eAAT2F,IACsB,KAApBjJ,EAAOgE,UACTV,EAAMmF,SAAWM,EAAgBC,EAAQ,GACZ,KAApBhJ,EAAOgE,YACDV,EAAMmF,SAAjBO,EAAQ,EAAoBD,EAAgBC,EAAQ,GAAyBE,IAI9ED,GAIX,SAASC,EAAYlJ,EAAQsD,GAC3B,MAAQtD,EAAOwE,OAGb,GAFAxE,EAAOmJ,SAAS,eAEZnJ,EAAOqI,IAAI,OAEb,GADArI,EAAOE,OACH4I,GAAc9I,EAAOwE,MAAO,MAxBvB,aAyBJ,IAAIxE,EAAOC,MAAMyI,GAEtB,OADApF,EAAMmF,SAAWE,EA1BR,SA4BJ,GAAI3I,EAAOC,MAAM,MAEtB,MA9BS,SA+BJ,GAAID,EAAOC,MAAM,KAAK,GAG3B,OADAqD,EAAMmF,SAAWM,EAAgB,GAC7B/I,EAAOgE,UAlCF,SAkCyCV,EAAMmF,SAASzI,EAAQsD,GACpE,GAAItD,EAAOC,MAAM,MACtB,MApCS,SAqCJ,GAAID,EAAOC,MAAM,KAEtB,MAvLS,QAyLTD,EAAOqI,IAAI,QAIf,GAAIS,EAAY,CACd,GAAI/C,EAAWqD,uBAAwB,MA9L5B,QA8LmD9F,EAAMmF,SAAWE,EAGjF,MAjDa,SAqDf,OADAO,EAAYG,UAAW,EAChBH,EApFcI,CAAoBtJ,EAAOgE,UAAWV,EAAMmF,UACtDnF,EAAMmF,SAASzI,EAAQsD,KAJ9BA,EAAMmF,SA0FZ,SAA4BC,EAAWC,GACrC,KAAO,OAAOH,QAAQE,EAAUE,OAAO,GAAGL,gBAAkB,GAC1DG,EAAYA,EAAUG,OAAO,GAG/B,IAAIC,EAAiC,GAApBJ,EAAU/C,OAG3B,SAASuD,EAAYlJ,EAAQsD,GAC3B,MAAQtD,EAAOwE,OAGb,GAFAxE,EAAOmJ,SAAS,WAEZnJ,EAAOqI,IAAI,OAEb,GADArI,EAAOE,OACH4I,GAAc9I,EAAOwE,MAAO,MARvB,aASJ,IAAIxE,EAAOC,MAAMyI,GAEtB,OADApF,EAAMmF,SAAWE,EAVR,SAaT3I,EAAOqI,IAAI,QAIf,GAAIS,EAAY,CACd,GAAI/C,EAAWqD,uBAAwB,MAhO5B,QAgOmD9F,EAAMmF,SAAWE,EAGjF,MArBa,SAyBf,OADAO,EAAYG,UAAW,EAChBH,EAzHcK,CAAmBvJ,EAAOgE,UAAWV,EAAMmF,UACrDnF,EAAMmF,SAASzI,EAAQsD,IAOlC,IAAK,IAAIiD,EAAI,EAAGA,EAAIL,EAAUP,OAAQY,IACpC,GAAIvG,EAAOC,MAAMiG,EAAUK,IAAK,MAAO,WAGzC,OAAIvG,EAAOC,MAAM+F,GAAoB,cACd,KAAnB1C,EAAMiE,WAAoBvH,EAAOC,MAAMiH,GAAqB,WAC5DlH,EAAOC,MAAMmH,IAAapH,EAAOC,MAAMqF,GAAuB,UAC9DtF,EAAOC,MAAMoH,GAAkB,UAC/BrH,EAAOC,MAAM,iBAAyB,aAEtCD,EAAOC,MAAMiH,GACQ,OAAnB5D,EAAMiE,WAAyC,SAAnBjE,EAAMiE,UAA6B,MAC5D,YAITvH,EAAOE,OACAiI,EAAW,KAvIH,SA0OjB,SAASL,EAAYxE,GACnB,KAA0B,MAAnBmC,EAAInC,GAAOoE,MAChBpE,EAAMoC,OAAO8D,MAGflG,EAAMoC,OAAO+D,KAAK,CAChB7B,OAAQnC,EAAInC,GAAOsE,OAAS9B,EAAKY,WACjCgB,KAAM,KACNgC,MAAO,OAaX,SAAS3B,EAAO/H,EAAQsD,GAGtB,IAFA,IAAIqG,EAAW3J,EAAOyH,cAEfnE,EAAMoC,OAAOC,OAAS,GAAKF,EAAInC,GAAOsE,OAAS+B,GAAU,CAC9D,GAAuB,MAAnBlE,EAAInC,GAAOoE,KAAc,OAAO,EACpCpE,EAAMoC,OAAO8D,MAGf,OAAO/D,EAAInC,GAAOsE,QAAU+B,EAG9B,SAASC,EAAW5J,EAAQsD,GACtBtD,EAAOuD,QAAOD,EAAMuG,iBAAkB,GAC1C,IAAI5B,EAAQ3E,EAAMmF,SAASzI,EAAQsD,GAC/BU,EAAUhE,EAAOgE,UAErB,GAAIV,EAAMuG,iBAA8B,KAAX7F,EAAgB,OAAOhE,EAAOC,MAAMiH,GAAa,GAAS,OAASH,EAAM,WA/QvF,QAuRf,GAPI,KAAK+C,KAAK9F,KAAUV,EAAMuG,iBAAkB,GAClC,YAAT5B,GAAgC,WAATA,GAA0C,QAAnB3E,EAAMiE,YAAqBU,EAAQ,QAEvE,QAAXjE,GAAgC,UAAXA,IAAqBV,EAAMyE,QAAU,GAC/C,UAAX/D,IAAqBV,EAAMyG,QAAS,GACzB,KAAX/F,GAAmBV,EAAMyG,QAA6B,MAAnBtE,EAAInC,GAAOoE,MAAcI,EAAYxE,GAEtD,GAAlBU,EAAQ2B,SAAgB,iBAAiBmE,KAAK7B,GAAQ,CACxD,IAAI+B,EAAkB,MAAMxB,QAAQxE,GAIpC,IAHwB,GAApBgG,GAnCR,SAA0BhK,EAAQsD,EAAOoE,GACvC,IAAIgC,EAAQ1J,EAAOC,MAAM,uBAAuB,GAAS,KAAOD,EAAOiK,SAAW,EAClF3G,EAAMoC,OAAO+D,KAAK,CAChB7B,OAAQtE,EAAMkE,OAASf,EACvBiB,KAAMA,EACNgC,MAAOA,IA8BoBQ,CAAiBlK,EAAQsD,EAAO,MAAM1C,MAAMoJ,EAAiBA,EAAkB,KAGlF,IAFxBA,EAAkB,MAAMxB,QAAQxE,IAEL,CACzB,GAAIyB,EAAInC,GAAOoE,MAAQ1D,EAAuE,MA7RnF,QA6RqBV,EAAMkE,OAASlE,EAAMoC,OAAO8D,MAAM5B,OAASnB,GAS/E,OALInD,EAAMyE,OAAS,GAAK/H,EAAOwE,OAA4B,MAAnBiB,EAAInC,GAAOoE,OAC7CpE,EAAMoC,OAAOC,OAAS,GAAGrC,EAAMoC,OAAO8D,MAC1ClG,EAAMyE,QAAU,GAGXE,EAwCT,MArCe,CACbtE,WAAY,SAAoBwG,GAC9B,MAAO,CACL1B,SAAUnB,EACV5B,OAAQ,CAAC,CACPkC,OAAQuC,GAAc,EACtBzC,KAAM,KACNgC,MAAO,OAETlC,OAAQ2C,GAAc,EACtB5C,UAAW,KACXwC,QAAQ,EACRhC,OAAQ,IAGZhI,MAAO,SAAeC,EAAQsD,GAC5B,IAAI8G,EAAS9G,EAAM0E,WACfoC,IAAQ9G,EAAM0E,YAAa,GAC/B,IAAIC,EAAQ2B,EAAW5J,EAAQsD,GAI/B,OAHI2E,GAAkB,WAATA,IAAoB3E,EAAMiE,UAAqB,WAATU,GAA+B,eAATA,EAAyBjI,EAAOgE,UAAYiE,GACxG,eAATA,IAAwBA,EAAQ,MAChCjI,EAAOwE,OAASlB,EAAMyG,SAAQzG,EAAMyG,QAAS,GAC1CK,EAASnC,WAA2BA,GAE7CT,OAAQ,SAAgBlE,EAAO+G,GAC7B,GAAI/G,EAAMmF,UAAYnB,EAAW,OAAOhE,EAAMmF,SAASY,SAAWnK,EAAWoL,KAAO,EACpF,IAAIC,EAAQ9E,EAAInC,GACZkH,EAAUD,EAAM7C,MAAQ2C,EAAUzB,OAAO,GAC7C,OAAmB,MAAf2B,EAAMb,MAAsBa,EAAMb,OAASc,EAAU,EAAI,GAAeD,EAAM3C,QAAU4C,EAAU/D,EAAgB,IAExHgE,cAAe,gBACfC,cAAe,CACbC,QAAS,OAEXC,YAAa,IACbC,KAAM,aAIV3L,EAAW8F,WAAW,gBAAiB,UAMvC9F,EAAW8F,WAAW,gBAAiB,CACrC8F,KAAM,SACNjE,gBANyBxB,EAMH,6HALfA,EAAI0F,MAAM,QAvWjB9F,CAAI,EAAQ,M,qBCQb,SAAU/F,GACX,aAEAA,EAAWC,WAAW,QAAQ,SAAU6L,EAASC,GAG/C,SAASC,EAAY5H,EAAO6H,GAC1B7H,EAAM8H,SAAS3B,KAAK0B,GAGtB,SAASE,EAAY/H,GACnB,OAAIA,EAAM8H,SAASzF,OAAS,EACnBrC,EAAM8H,SAAS9H,EAAM8H,SAASzF,OAAS,GAEvC,KAiCX,SAAS2F,EAAiBC,EAAYC,EAAUC,GAC9C,OAAO,WACLC,KAAKZ,KAAOS,EACZG,KAAKC,UAAY,EACjBD,KAAKzD,MAAQuD,EACbE,KAAKD,OAASA,EACdC,KAAKE,SAAW,KAEhBF,KAAKG,gBAAkB,WACrB,OAAOH,KAAKD,OAAOC,KAAKC,UAAY,IAAM,MAG5CD,KAAKI,YAAc,WAEjB,OADAJ,KAAKC,YACE,WAGTD,KAAKK,aAAe,cAIxB,IAAIC,EAAU,GAqBd,SAASC,EAAS3I,EAAO4I,GACvB5I,EAAM4I,EAAIA,EAIZ,SAASC,EAAOC,EAAQ9I,GACtB,IAAI+I,EAEJ,GAAID,EAAOnM,MAAM,iBAAkB,CACjC,IAAIqM,EAAUF,EAAOpI,UAAUpD,MAAM,GAKrC,OAFAsK,EAAY5H,EADZ+I,EAAO,IADPA,EAAOL,EAAQO,eAAeD,GAAWN,EAAQM,GAAWN,EAAiB,UAG7EC,EAAS3I,EAAOkJ,GACTH,EAAKpE,MAId,GAAImE,EAAOnM,MAAM,gBACf,MAAO,MAIT,GAAImM,EAAOnM,MAAM,gBACf,MAAO,MAIT,GAAImM,EAAOnM,MAAM,OAIf,OAHAgM,EAAS3I,GAAO,SAAU8I,EAAQ9I,GAChC,OAAOmJ,EAAWL,EAAQ9I,EAAO,UAE5B,UAGT,GAAI8I,EAAOnM,MAAM,OAIf,OAHAgM,EAAS3I,GAAO,SAAU8I,EAAQ9I,GAChC,OAAOmJ,EAAWL,EAAQ9I,EAAO,UAE5B,UAGT,GAAI8I,EAAOnM,MAAM,MAIf,OAHAgM,EAAS3I,GAAO,SAAU8I,EAAQ9I,GAChC,OAAOmJ,EAAWL,EAAQ9I,EAAO,SAE5B,UAGT,GAAI8I,EAAOnM,MAAM,KAIf,OAHAgM,EAAS3I,GAAO,SAAU8I,EAAQ9I,GAChC,OAAOmJ,EAAWL,EAAQ9I,EAAO,QAE5B,UAGT,IAAIoJ,EAAKN,EAAOlM,OAEhB,MAAU,KAANwM,GACFN,EAAO3H,YACA,WACQ,KAANiI,GAAmB,KAANA,GACtBL,EAAOhB,EAAY/H,KAGjB+I,EAAKN,aAAaW,GAClBT,EAAS3I,EAAOkJ,GAKX,WAHE,QAIM,KAANE,GAAmB,KAANA,GAGtBxB,EAAY5H,EADZ+I,EAAO,IADPA,EAAOL,EAAiB,UAGjB,WACE,KAAKlC,KAAK4C,IACnBN,EAAOjD,SAAS,UACT,SAEPiD,EAAOjD,SAAS,WAGC,UAFjBkD,EAhJJ,SAAyB/I,GAGvB,IAFA,IAAIS,EAAUT,EAAM8H,SAEX7E,EAAIxC,EAAQ4B,OAAS,EAAGY,GAAK,EAAGA,IAAK,CAC5C,IAAI8F,EAAOtI,EAAQwC,GAEnB,GAAiB,WAAb8F,EAAKvB,KAIT,OAAOuB,EAGT,MAAO,CACLR,gBAAiB,WACf,OAAO,OAiIFc,CAAgBrJ,IAEdwH,OACPuB,EAAKT,SAAWQ,EAAOpI,WAGlBqI,EAAKR,mBAIhB,SAASY,EAAWL,EAAQ9I,EAAOsJ,GACjC,GAAIR,EAAO7H,WACT,OAAO,KAGT,GAAIqI,GAAcR,EAAOnM,MAAM2M,GAE7B,OADAX,EAAS3I,EAAO6I,GACT,UAGT,GAAIC,EAAOnM,MAAM,iBACf,MAAO,MAGT,GAAImM,EAAOnM,MAAM,cACf,MAAO,aAIT,GAAImM,EAAOnM,MAAM,gBACf,MAAO,MAIT,GAAImM,EAAOnM,MAAM,cACf,MAAO,MAIT,GAAImM,EAAOnM,MAAM,WACf,MAAO,MAIT,GAAImM,EAAOnM,MAAM,4BACf,OAAO,KAGT,GAAImM,EAAOnM,MAAM,4BACf,MAAO,SAGT,IAAIyM,EAAKN,EAAOlM,OAEhB,MAAU,KAANwM,GAAmB,KAANA,GAAmB,KAANA,GAAmB,KAANA,GAAmB,KAANA,GAAmB,KAANA,EAC5D,UAGC,KAANA,GACFN,EAAO3H,YACA,WAGF,QAGT,SAAS+H,EAAYJ,EAAQ9I,GAC3B,IAAIoJ,EAAKN,EAAOhI,OAGhB,MAAU,KAANsI,GAAmB,KAANA,GACJrB,EAAY/H,GACdwI,YAAYY,GACrBN,EAAO/D,IAAIqE,GACXT,EAAS3I,EAAO6I,GACT,WAGL,UAAUrC,KAAK4C,IACjBN,EAAO/D,IAAIqE,GACJ,OAGTT,EAAS3I,EAAO6I,GA5OlB,SAAoB7I,GAClB,IAAI+I,EAAO/I,EAAM8H,SAAS5B,MAEtB6C,GACFA,EAAKN,eAyOPc,CAAWvJ,GACJ6I,EAAOC,EAAQ9I,IAGxB,OA9LA0I,EAAsB,aAAIV,EAAiB,eAAgB,MAAO,CAAC,SAAU,YAC7EU,EAAuB,cAAIV,EAAiB,gBAAiB,MAAO,CAAC,GAAI,SACzEU,EAAoB,WAAIV,EAAiB,aAAc,MAAO,CAAC,SAC/DU,EAAe,MAAIV,EAAiB,QAAS,MAAO,CAAC,SACrDU,EAAa,IAAIV,EAAiB,MAAO,MAAO,CAAC,SACjDU,EAAe,MAAIV,EAAiB,QAAS,MAAO,CAAC,SACrDU,EAAa,IAAIV,EAAiB,MAAO,MAAO,CAAC,SACjDU,EAAe,MAAIV,EAAiB,QAAS,MAAO,CAAC,SACrDU,EAAc,KAAIV,EAAiB,OAAQ,MAAO,CAAC,SACnDU,EAAiB,QAAIV,EAAiB,UAAW,MAAO,CAAC,SACzDU,EAAiB,QAAIV,EAAiB,UAAW,MAAO,CAAC,SACzDU,EAAkB,SAAIV,EAAiB,WAAY,MAAO,CAAC,SAE3DU,EAAiB,QAAI,WACnBN,KAAKZ,KAAO,UACZY,KAAKzD,MAAQ,MAEbyD,KAAKG,gBAAkBH,KAAKI,YAAcJ,KAAKK,aAAe,cA6KzD,CACLpI,WAAY,WAIV,MAAO,CACLyH,SAAU,GACVc,EALMjB,EAAawB,WAAa,SAAUL,EAAQ9I,GAClD,OAAOmJ,EAAWL,EAAQ9I,IACxB6I,IAMNrH,UAAW,SAAmBgI,GAC5B,MAAO,CACL1B,SAAU0B,EAAE1B,SAASxK,QACrBsL,EAAGY,EAAEZ,IAGTnM,MAAO,SAAeC,EAAQsD,GAC5B,OAAOA,EAAM4I,EAAElM,EAAQsD,IAEzByJ,UAAW,SAAmBzJ,GAC5BA,EAAM4I,EAAIC,EACV7I,EAAM8H,SAASzF,OAAS,GAE1BiF,YAAa,QAGjB1L,EAAW8F,WAAW,cAAe,QACrC9F,EAAW8F,WAAW,eAAgB,QAjSpCC,CAAI,EAAQ,M,oBCMb,SAAU/F,GACX,aAEAA,EAAWoB,YAAc,SAAU0M,EAAMlN,EAASmN,GAChD,MAAO,CACLtJ,WAAY,WACV,MAAO,CACLqJ,KAAM9N,EAAWyE,WAAWqJ,GAC5BlN,QAASZ,EAAWyE,WAAW7D,GAC/BoN,QAAS,EACTC,QAAS,KACTC,WAAY,EACZC,WAAY,KACZC,WAAY,OAGhBxI,UAAW,SAAmBxB,GAC5B,MAAO,CACL0J,KAAM9N,EAAW4F,UAAUkI,EAAM1J,EAAM0J,MACvClN,QAASZ,EAAW4F,UAAUhF,EAASwD,EAAMxD,SAC7CoN,QAAS5J,EAAM4J,QACfC,QAAS,KACTC,WAAY9J,EAAM8J,WAClBC,WAAY,OAGhBtN,MAAO,SAAeC,EAAQsD,GAoB5B,OAnBItD,GAAUsD,EAAMgK,YAAcC,KAAKC,IAAIlK,EAAM4J,QAAS5J,EAAM8J,YAAcpN,EAAOyN,SACnFnK,EAAMgK,WAAatN,EACnBsD,EAAM4J,QAAU5J,EAAM8J,WAAapN,EAAOyN,OAGxCzN,EAAOyN,OAASnK,EAAM4J,UACxB5J,EAAM6J,QAAUH,EAAKjN,MAAMC,EAAQsD,EAAM0J,MACzC1J,EAAM4J,QAAUlN,EAAO0N,KAGrB1N,EAAOyN,OAASnK,EAAM8J,aACxBpN,EAAO0N,IAAM1N,EAAOyN,MACpBnK,EAAM+J,WAAavN,EAAQC,MAAMC,EAAQsD,EAAMxD,SAC/CwD,EAAM8J,WAAapN,EAAO0N,KAG5B1N,EAAO0N,IAAMH,KAAKC,IAAIlK,EAAM4J,QAAS5J,EAAM8J,YAGnB,MAApB9J,EAAM+J,WAA2B/J,EAAM6J,QAAkC,MAAjB7J,EAAM6J,SAAmB7J,EAAMxD,QAAQ6N,eAAiBV,GAA0C,MAA/B3J,EAAMxD,QAAQ6N,cAA8BrK,EAAM6J,QAAU,IAAM7J,EAAM+J,WAAuB/J,EAAM+J,YAEtO7F,OAAQwF,EAAKxF,QAAU,SAAUlE,EAAO+G,EAAWuD,GACjD,OAAOZ,EAAKxF,OAAOlE,EAAM0J,KAAM3C,EAAWuD,IAE5CC,cAAeb,EAAKa,cACpB9I,UAAW,SAAmBzB,GAC5B,MAAO,CACLA,MAAOA,EAAM0J,KACb7M,KAAM6M,IAGVD,UAAW,SAAmBzJ,GAC5B,IAAIwK,EAAWC,EAGf,OAFIf,EAAKD,YAAWe,EAAYd,EAAKD,UAAUzJ,EAAM0J,OACjDlN,EAAQiN,YAAWgB,EAAejO,EAAQiN,UAAUzJ,EAAMxD,UACvC,MAAhBiO,EAAuBD,EAAYb,GAAwB,MAAba,EAAoBA,EAAY,IAAMC,EAAeA,KAjE9G9I,CAAI,EAAQ","file":"static/js/468.d24487db.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n    var overlay = {\n      token: function token(stream) {\n        if (stream.match(rx_strong) && stream.match(/\\W+|$/, false)) return 'strong';\n        if (stream.match(rx_emphasis) && stream.match(/\\W+|$/, false)) return 'em';\n        if (stream.match(rx_literal) && stream.match(/\\W+|$/, false)) return 'string-2';\n        if (stream.match(rx_number)) return 'number';\n        if (stream.match(rx_positive)) return 'positive';\n        if (stream.match(rx_negative)) return 'negative';\n        if (stream.match(rx_uri)) return 'link';\n\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n\n        return null;\n      }\n    };\n    var mode = CodeMirror.getMode(config, options.backdrop || 'rst-base');\n    return CodeMirror.overlayMode(mode, overlay, true); // combine\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMode('rst-base', function (config) {\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n        rx_TAIL = new RegExp(format('^{0}', TAIL));\n    var NAME = \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n        rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS = \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n        rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n    var rx_section = new RegExp(\"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n    var rx_substitution_ref = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(format('^`{0}`_', TEXT2));\n    var rx_role_pre = new RegExp(format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(format('^:{0}:{1}', NAME, TAIL));\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_normal(stream, state) {\n      var token = null;\n\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python,\n          local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre || stream.match(rx_role_pre, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_pre, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_pre, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n\n            if (stream.current().match(/^(?:math|latex)/)) {\n              state.tmp_stex = true;\n            }\n\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_pre, 3));\n            stream.match(/^:`/);\n            token = 'meta';\n            break;\n\n          case 3:\n            if (state.tmp_stex) {\n              state.tmp_stex = undefined;\n              state.tmp = {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              };\n            }\n\n            if (state.tmp) {\n              if (stream.peek() == '`') {\n                change(state, to_normal, context(rx_role_pre, 4));\n                state.tmp = undefined;\n                break;\n              }\n\n              token = state.tmp.mode.token(stream, state.tmp.local);\n              break;\n            }\n\n            change(state, to_normal, context(rx_role_pre, 4));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_pre, 5));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_pre, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf || stream.match(rx_role_suf, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_suf, 1));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_suf, 2));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_suf, 3));\n            stream.match(/^`:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role_suf, 4));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_suf, 5));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_suf, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role, 3));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role, 4));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref || stream.match(rx_substitution_ref, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_substitution_ref, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_substitution_ref, 2));\n            if (stream.match(/^_?_?/)) token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 || stream.match(rx_link_ref2, false)) {\n        switch (stage(state)) {\n          case 0:\n            if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n              change(state, to_normal, context(rx_link_ref2, 1));\n            } else {\n              stream.match(rx_link_ref2);\n            }\n\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_link_ref2, 2));\n            stream.match(/^`/);\n            token = 'link';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_link_ref2, 3));\n            stream.match(rx_TEXT2);\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_link_ref2, 4));\n            stream.match(/^`_/);\n            token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      } else {\n        if (stream.next()) change(state, to_normal);\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_explicit(stream, state) {\n      var token = null;\n\n      if (phase(state) == rx_substitution || stream.match(rx_substitution, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_substitution, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_substitution, 2));\n            stream.match(rx_substitution_sepa);\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_substitution, 3));\n            stream.match(rx_substitution_name);\n            token = 'keyword';\n            break;\n\n          case 3:\n            change(state, to_explicit, context(rx_substitution, 4));\n            stream.match(rx_substitution_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive || stream.match(rx_directive, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_directive, 1));\n            stream.match(rx_directive_name);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) state.tmp_stex = true;else if (stream.current().match(/^python/)) state.tmp_py = true;\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_directive, 2));\n            stream.match(rx_directive_tail);\n            token = 'meta';\n\n            if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n              state.tmp_stex = undefined;\n              change(state, to_mode, {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              });\n            }\n\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_directive, 3));\n\n            if (stream.match(/^python\\s*$/) || state.tmp_py) {\n              state.tmp_py = undefined;\n              change(state, to_mode, {\n                mode: mode_python,\n                local: CodeMirror.startState(mode_python)\n              });\n            }\n\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_link, 1));\n            stream.match(rx_link_head);\n            stream.match(rx_link_name);\n            token = 'link';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_link, 2));\n            stream.match(rx_link_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else {\n        stream.eatSpace();\n\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_mode(stream, state) {\n      if (state.ctx.mode && state.ctx.local) {\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n\n      change(state, to_normal);\n      return null;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function context(phase, stage, mode, local) {\n      return {\n        phase: phase,\n        stage: stage,\n        mode: mode,\n        local: local\n      };\n    }\n\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n\n    function phase(state) {\n      return state.ctx.phase;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    return {\n      startState: function startState() {\n        return {\n          tok: to_normal,\n          ctx: context(undefined, 0)\n        };\n      },\n      copyState: function copyState(state) {\n        var ctx = state.ctx,\n            tmp = state.tmp;\n        if (ctx.local) ctx = {\n          mode: ctx.mode,\n          local: CodeMirror.copyState(ctx.mode, ctx.local)\n        };\n        if (tmp) tmp = {\n          mode: tmp.mode,\n          local: CodeMirror.copyState(tmp.mode, tmp.local)\n        };\n        return {\n          tok: state.tok,\n          ctx: ctx,\n          tmp: tmp\n        };\n      },\n      innerMode: function innerMode(state) {\n        return state.tmp ? {\n          state: state.tmp.local,\n          mode: state.tmp.mode\n        } : state.ctx.mode ? {\n          state: state.ctx.local,\n          mode: state.ctx.mode\n        } : null;\n      },\n      token: function token(stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMIME('text/x-rst', 'rst'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\", \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"lambda\", \"pass\", \"raise\", \"return\", \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\", \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\", \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\", \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\", \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\", \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\", \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\", \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\", \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function (conf, parserConf) {\n    var ERRORCLASS = \"error\";\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/; //               (Backwards-compatibility with old, cumbersome config system)\n\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters, parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/];\n\n    for (var i = 0; i < operators.length; i++) {\n      if (!operators[i]) operators.splice(i--, 1);\n    }\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n    var myKeywords = commonKeywords,\n        myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined) myKeywords = myKeywords.concat(parserConf.extra_keywords);\n    if (parserConf.extra_builtins != undefined) myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3);\n\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers || /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers || /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\", \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\", \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins); // tokenizers\n\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\";\n      if (sol) state.indent = stream.indentation(); // Handle scope changes\n\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset) pushPyScope(state);else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\") state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state)) style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null; // Handle Comments\n\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\"; // Handle Number Literals\n\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false; // Floats\n\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^[\\d_]+\\.\\d*/)) {\n          floatLiteral = true;\n        }\n\n        if (stream.match(/^\\.\\d+/)) {\n          floatLiteral = true;\n        }\n\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        } // Integers\n\n\n        var intLiteral = false; // Hex\n\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true; // Binary\n\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true; // Octal\n\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true; // Decimal\n\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i); // TODO - Can you have imaginary longs?\n\n          intLiteral = true;\n        } // Zero by itself with no other piece of number.\n\n\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      } // Handle Strings\n\n\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++) {\n        if (stream.match(operators[i])) return \"operator\";\n      }\n\n      if (stream.match(delimiters)) return \"punctuation\";\n      if (state.lastToken == \".\" && stream.match(identifiers)) return \"property\";\n      if (stream.match(keywords) || stream.match(wordOperators)) return \"keyword\";\n      if (stream.match(builtins)) return \"builtin\";\n      if (stream.match(/^(self|cls)\\b/)) return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\") return \"def\";\n        return \"variable\";\n      } // Handle non-detected items\n\n\n      stream.next();\n      return inFormat ? null : ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0) {\n        delimiter = delimiter.substr(1);\n      }\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function (stream, state) {\n          var inner = tokenBaseInner(stream, state, true);\n\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1);\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1);else state.tokenize = tokenString;\n            }\n          }\n\n          return inner;\n        };\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol()) return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0);\n            if (stream.current()) return OUTCLASS;else return state.tokenize(stream, state);\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) return ERRORCLASS;else state.tokenize = tokenOuter;\n        }\n\n        return OUTCLASS;\n      }\n\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0) {\n        delimiter = delimiter.substr(1);\n      }\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol()) return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) return ERRORCLASS;else state.tokenize = tokenOuter;\n        }\n\n        return OUTCLASS;\n      }\n\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") {\n        state.scopes.pop();\n      }\n\n      state.scopes.push({\n        offset: top(state).offset + conf.indentUnit,\n        type: \"py\",\n        align: null\n      });\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1;\n      state.scopes.push({\n        offset: state.indent + hangingIndent,\n        type: type,\n        align: align\n      });\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n      var style = state.tokenize(stream, state);\n      var current = stream.current(); // Handle decorators\n\n      if (state.beginningOfLine && current == \"@\") return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n      if ((style == \"variable\" || style == \"builtin\") && state.lastToken == \"meta\") style = \"meta\"; // Handle scope changes.\n\n      if (current == \"pass\" || current == \"return\") state.dedent += 1;\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\") pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1) pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index + 1));\n        delimiter_index = \"])}\".indexOf(current);\n\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent;else return ERRORCLASS;\n        }\n      }\n\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function startState(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{\n            offset: basecolumn || 0,\n            type: \"py\",\n            align: null\n          }],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n      token: function token(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n        if (style && style != \"comment\") state.lastToken = style == \"keyword\" || style == \"punctuation\" ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n        if (stream.eol() && state.lambda) state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize != tokenBase) return state.tokenize.isString ? CodeMirror.Pass : 0;\n        var scope = top(state),\n            closing = scope.type == textAfter.charAt(0);\n        if (scope.align != null) return scope.align - (closing ? 1 : 0);else return scope.offset - (closing ? hangingIndent : 0);\n      },\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {\n        triples: \"'\\\"\"\n      },\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function words(str) {\n    return str.split(\" \");\n  };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \" + \"extern gil include nogil property public \" + \"readonly struct union DEF IF ELIF ELSE\")\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function (_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n\n      if (plug) {\n        plug.closeBracket();\n      }\n    } // returns the non-default plugin closest to the end of the list\n\n\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n\n        return plug;\n      }\n\n      return {\n        styleIdentifier: function styleIdentifier() {\n          return null;\n        }\n      };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null; // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function () {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n\n        this.openBracket = function () {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n\n        this.closeBracket = function () {};\n      };\n    }\n\n    var plugins = {};\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n    plugins[\"label\"] = addPluginPattern(\"label\", \"tag\", [\"atom\"]);\n    plugins[\"ref\"] = addPluginPattern(\"ref\", \"tag\", [\"atom\"]);\n    plugins[\"eqref\"] = addPluginPattern(\"eqref\", \"tag\", [\"atom\"]);\n    plugins[\"cite\"] = addPluginPattern(\"cite\", \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"] = addPluginPattern(\"bibitem\", \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"] = addPluginPattern(\"Bibitem\", \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\"] = addPluginPattern(\"RBibitem\", \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function () {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    } // called when in a normal (no environment) context\n\n\n    function normal(source, state) {\n      var plug; // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      } // escape characters\n\n\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      } // white space control characters\n\n\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      } // find if we're starting various math modes\n\n\n      if (source.match(\"\\\\[\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"\\\\]\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"\\\\(\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"\\\\)\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"$$\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"$$\");\n        });\n        return \"keyword\";\n      }\n\n      if (source.match(\"$\")) {\n        setState(state, function (source, state) {\n          return inMathMode(source, state, \"$\");\n        });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      } // escape characters\n\n\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      } // white space control characters\n\n\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      } // special math-mode characters\n\n\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      } // non-special characters\n\n\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n\n      var ch = source.next();\n\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(),\n          lastPlug;\n\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n\n      setState(state, normal);\n      popCommand(state);\n      return normal(source, state);\n    }\n\n    return {\n      startState: function startState() {\n        var f = parserConfig.inMathMode ? function (source, state) {\n          return inMathMode(source, state);\n        } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function copyState(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function token(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function blankLine(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function startState() {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function innerMode(state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function blankLine(state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});"],"sourceRoot":""}