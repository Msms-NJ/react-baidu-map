{"version":3,"sources":["../node_modules/codemirror/mode/django/django.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","defineMode","keywords","filters","operators","wordOperators","tokenBase","stream","state","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","startState","token","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","overlayMode","defineMIME","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","ch","inBlock","eatWhile","doctype","depth","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","electricChars","blankLine","baseToken","overlayToken"],"mappings":"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","file":"static/js/466.16195ddb.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function () {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\", \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\", \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\", \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\", \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\", \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\", \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\", \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\", \"default\", \"default_if_none\", \"dictsort\", \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\", \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\", \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\", \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\", \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\", \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\", \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\", \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\", \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\", \"unordered_list\", \"upper\", \"urlencode\", \"urlize\", \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\"); // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n\n    function tokenBase(stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      } // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n\n\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n\n      return null;\n    } // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n\n\n    function inString(delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next(); // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    } // Apply Django template variable syntax highlighting\n\n\n    function inVariable(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to find the variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to match an operator\n\n\n      if (stream.match(operators)) {\n        return \"operator\";\n      } // Attempt to match a word operator\n\n\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      } // Attempt to match a keyword\n\n\n      var keywordMatch = stream.match(keywords);\n\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n\n        return \"keyword\";\n      } // Attempt to match a variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null; // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false; // Release the \"lock\"\n\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    } // Mark everything as comment inside the tag and the tag itself.\n\n\n    function inComment(stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase;else stream.skipToEnd();\n      return \"comment\";\n    } // Mark everything as a comment until the `blockcomment` tag closes.\n\n\n    function inBlockComment(stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function token(stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n  CodeMirror.defineMode(\"django\", function (config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function startState() {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function innerMode(state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function blankLine(state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});"],"sourceRoot":""}